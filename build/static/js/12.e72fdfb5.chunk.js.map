{"version":3,"sources":["components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["useStyles","makeStyles","theme","root","cursor","Logo","setHomeIsActive","classes","spy","smooth","duration","offset","to","onSetActive","onSetInactive","className","src","alt","width","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","smoothScrollProps","AnimatedLink","React","forwardRef","props","ref","motion","div","custom","animate","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","color","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","variant","TabIndicatorProps","children","Menu","homeIsActive","useState","value","setValue","isScrolling","setIsScrolling","isLoading","useContext","LoaderContext","controls","useAnimation","t","useTranslation","useEffect","Events","scrollEvent","register","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","onChange","event","newValue","component","label","Button","MuiLink","href","underline","drawer","background","default","list","fullList","listItem","justifyContent","padding","btnContainer","active","MobileMenu","open","onClose","onOpen","listItemProps","button","Link","onClick","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","line","height","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","rest","variants","initial","rotate","x","logo","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","useTheme","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","elevation","Toolbar","Hidden","smDown","mdUp"],"mappings":"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","file":"static/js/12.e72fdfb5.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\n\nconst Logo = ({ setHomeIsActive, ...rest }) => {\n    const classes = useStyles();\n    return (\n        <Link\n            spy\n            smooth\n            duration={500}\n            offset={-70}\n            to=\"home\"\n            onSetActive={() => setHomeIsActive(true)}\n            onSetInactive={() => setHomeIsActive(false)}\n            className={classes.root}\n        >\n            <img src=\"images/shahzaib-home-white.png\" alt=\"logo\" width=\"180px\"/>\n        </Link>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        cursor: \"pointer\",\n    },\n}));\n\nexport default Logo;\n","import React, { useState } from \"react\";\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\nimport i18n from \"i18next\";\nimport { useTranslation } from \"react-i18next\";\nimport \"flag-icon-css/css/flag-icon.min.css\";\n\nconst languages = [\n    {\n        code: \"fr\",\n        name: \"FR\",\n        country_code: \"fr\",\n    },\n    {\n        code: \"en\",\n        name: \"EN\",\n        country_code: \"gb\",\n    },\n];\n\nconst LangSelector = (props) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const handleClose = (code) => {\n        i18n.changeLanguage(code);\n        setAnchorEl(null);\n        if (props.onClose) {\n            props.onClose();\n        }\n    };\n\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\n\n    return (\n        <div {...props}>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\n                {currentLanguage && (\n                    <>\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\n                        {currentLanguage.name}\n                    </>\n                )}\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\n            </Button>\n            <Menu\n                id=\"profile-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                keepMounted\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n                className={classes.profileMenu}\n                disableScrollLock\n            >\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\n                    EN\n                </MenuItem>\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\n                    FR\n                </MenuItem>\n            </Menu>\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    profileMenu: {\n        \"& .MuiPaper-root\": {\n            backgroundColor: theme.palette.primary.main,\n            marginTop: \"2px\",\n            boxShadow: theme.shadows[4],\n        },\n    },\n    menuItem: {\n        \"&:hover\": {\n            backgroundColor: theme.backgroundSecondary,\n        },\n    },\n    flagIcon: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport default LangSelector;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport { Link, Events } from \"react-scroll\";\nimport LangSelector from \"./LangSelector\";\nimport LoaderContext from \"../../contexts/loaderContext\";\nimport { useTranslation } from \"react-i18next\";\n\nconst smoothScrollProps = {\n    spy: true,\n    smooth: true,\n    offset: -70,\n    duration: 500,\n};\n\nconst AnimatedLink = React.forwardRef((props, ref) => (\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\n        <Link {...smoothScrollProps} {...props} />\n    </motion.div>\n));\n\nconst Menu = ({homeIsActive}) => {\n    const classes = useStyles();\n    const [value, setValue] = useState(false);\n    const [isScrolling, setIsScrolling] = useState(false);\n    const { isLoading } = useContext(LoaderContext);\n    const controls = useAnimation();\n    const { t } = useTranslation()\n\n    useEffect(() => {\n        Events.scrollEvent.register(\"begin\", (to, element) => {\n            setIsScrolling(true);\n        });\n\n        Events.scrollEvent.register(\"end\", (to, element) => {\n            setIsScrolling(false);\n        });\n    });\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start((i) => ({\n                y: 0,\n                opacity: 1,\n                transition: { delay: i * 0.1 + 0.3 },\n            }));\n        } else {\n            controls.start({ opacity: 0, y: -5 });\n        }\n    }, [isLoading, controls]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const spyHandleChange = (index) => {\n        if (!isScrolling) {\n            setValue(index);\n        }\n    };\n\n    useEffect(() => {\n        if (homeIsActive){\n            setValue(false)\n        }\n    }, [homeIsActive])\n\n    return (\n        <div className={classes.wrapper}>\n            <StyledTabs\n                className={classes.tabs}\n                value={value}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n            >\n                <StyledTab\n                    component={AnimatedLink}\n                    custom={0}\n                    animate={controls}\n                    to=\"about\"\n                    label={t('menu_about')}\n                    onSetActive={() => spyHandleChange(0)}\n                    onSetInactive={()=>spyHandleChange(false)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={1}\n                    to=\"experience\"\n                    label={t('menu_experience')}\n                    onSetActive={() => spyHandleChange(1)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={2}\n                    to=\"projects\"\n                    label={t('menu_projects')}\n                    onSetActive={() => spyHandleChange(2)}\n                />\n                <StyledTab\n                    component={AnimatedLink}\n                    animate={controls}\n                    custom={3}\n                    to=\"contact\"\n                    label={t('menu_contact')}\n                    onSetActive={() => spyHandleChange(3)}\n                />\n            </StyledTabs>\n            <motion.div custom={4} animate={controls}>\n                <Button\n                    component={MuiLink}\n                    href=\"/resume.pdf\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    underline=\"none\"\n                >\n                    {t('menu_resume')}\n                </Button>\n            </motion.div>\n            {/* <motion.div custom={5} animate={controls}>\n                <LangSelector style={{ marginLeft: \"32px\" }} />\n            </motion.div> */}\n        </div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: \"flex\",\n        alignItems: \"center\",\n    },\n    tabs: {\n        marginRight: theme.spacing(4),\n    },\n    navMenuItem: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        transition: \".2s\",\n        minWidth: 120,\n        \"&:hover\": {\n            color: theme.palette.text.primary,\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\nconst StyledTabs = withStyles({\n    indicator: {\n        \"& > span\": {\n            maxWidth: 20,\n        },\n    },\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\n\nexport default Menu;\n","import React from \"react\";\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\nimport { Link } from \"react-scroll\";\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\nimport LangSelector from \"./LangSelector\";\nimport { useTranslation } from \"react-i18next\";\n\nconst MobileMenu = ({ open, onClose, onOpen }) => {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const listItemProps = {\n        button: true,\n        component: Link,\n        onClick: onClose,\n        onKeyDown: onClose,\n        spy: true,\n        smooth: true,\n        offset: 0,\n        duration: 500,\n        className: classes.listItem,\n        activeClass: classes.active,\n    };\n\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\n            <div className={classes.list} role=\"presentation\">\n                <List className={classes.fullList}>\n                    <ListItem {...listItemProps} to=\"about\">\n                        {t('menu_about')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"experience\">\n                        {t('menu_experience')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"projects\">\n                        {t('menu_projects')}\n                    </ListItem>\n                    <ListItem {...listItemProps} to=\"contact\">\n                        {t('menu_contact')}\n                    </ListItem>\n                    <ListItem className={classes.btnContainer}>\n                        <Button\n                            component={MuiLink}\n                            href=\"/resume.pdf\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            underline=\"none\"\n                            >\n                            {t('menu_resume')}\n                        </Button>\n                    </ListItem>\n                    {/* <ListItem className={classes.btnContainer}>\n                        <LangSelector onClose={onClose} />\n                    </ListItem> */}\n                    {/* <ListItem className={classes.btnContainer}>\n                        <DarkModeSwitcher onClose={onClose} />\n                    </ListItem> */}\n                    <Divider />\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        backgroundColor: theme.palette.background.default,\n    },\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: \"auto\",\n        marginTop: theme.spacing(4),\n    },\n    listItem: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: theme.spacing(2, 0),\n        \"&:hover\": {\n            backgroundColor: \"rgb(80,80,80)\",\n        },\n    },\n    btnContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: theme.spacing(1),\n    },\n    active: {\n        backgroundColor: theme.palette.primary.main,\n    },\n}));\n\nexport default MobileMenu;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst HamburgerIcon = ({isOpen,...rest}) => {\n    const controls = useAnimation()\n    const classes = useStyles();\n    useEffect(() => {\n        if (isOpen) {\n            controls.start(\"animate\")\n        } else {\n            controls.start(\"initial\")\n        }\n    }, [isOpen,controls]);\n    return (\n        <motion.div className={classes.container} {...rest}>\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        overflow:'hidden',\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"flex-end\",\n        cursor:\"pointer\",\n        padding:\"2px\"\n    },\n    line: {\n        height: \"3px\",\n        backgroundColor: theme.palette.text.secondary,\n    },\n    line1: {\n        width: \"35px\",\n        marginBottom: \"7px\",\n    },\n    line2: {\n        width: \"25px\",\n        marginBottom: \"7px\",\n    },\n    line3: {\n        width: \"35px\",\n    },\n}));\n\nexport default HamburgerIcon;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\nimport { motion, useAnimation } from \"framer-motion\";\nimport Logo from \"./Logo\";\nimport Menu from \"./Menu\";\nimport MobileMenu from \"./MobileMenu\";\nimport HamburgerIcon from \"./HamburgerIcon\";\nimport loaderContext from \"../../contexts/loaderContext\";\n\nconst Navbar = () => {\n    const [homeIsActive, setHomeIsActive]=useState(true)\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\n    const { isLoading } = useContext(loaderContext);\n    const controls = useAnimation();\n    const theme = useTheme();\n    const [scroll, setScroll] = useState(false);\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\n    const classes = useStyles({ scroll, isMobile });\n    const handleNav = () => setScroll(window.scrollY > 30);\n    window.addEventListener(\"scroll\", handleNav);\n\n    const appbarVariants = {\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\n    };\n\n    useEffect(() => {\n        if (!isLoading) {\n            controls.start({\n                y: 0,\n                transition: {\n                    delay: 0.05,\n                    type: \"spring\",\n                    stiffness: 260,\n                    damping: 20,\n                },\n            });\n        } else {\n            controls.start({ y: -100 });\n        }\n    }, [isLoading, controls]);\n\n    return (\n        <motion.div\n            animate={controls}\n        >\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\n                <Toolbar\n                    className={classes.toolbar}\n                    component={motion.div}\n                    variants={appbarVariants}\n                    animate={scroll ? \"scrolled\" : \"initial\"}\n                    transition={{\n                        type: \"spring\",\n                        stiffness: 260,\n                        damping: 20,\n                    }}\n                >\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\n                    <Hidden smDown>\n                        <Menu homeIsActive={homeIsActive} />\n                    </Hidden>\n                    <Hidden mdUp>\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\n                    </Hidden>\n                </Toolbar>\n            </AppBar>\n            <Hidden mdUp>\n                <MobileMenu\n                    open={mobileNavIsOpen}\n                    onClose={() => setMobileNavIsOpen(false)}\n                    onOpen={() => setMobileNavIsOpen(true)}\n                />\n            </Hidden>\n        </motion.div>\n    );\n};\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        width: \"150px\",\n    },\n    navbar: {\n        backgroundColor: theme.palette.background.default,\n    },\n    toolbar: {\n        justifyContent: \"space-between\",\n        alignItems:\"center\",\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\n    },\n}));\n\nexport default Navbar;\n","import Navbar from \"./Navbar\";\nexport default Navbar;\n"],"sourceRoot":""}